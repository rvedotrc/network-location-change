#!/bin/bash

set -eu

MYDIR="$( dirname "$0" )"

svn_proxy() {
	pushd ~/.subversion
	if [ $1 = on ] ; then
		patch -p0 --force --forward < reith-proxy.patch || :
	else
		patch -p0 --force --reverse < reith-proxy.patch || :
	fi
	rm -f servers.{orig,rej}
	popd
}

firefox_proxy_type() {
	pushd ~/Library/Application\ Support/Firefox/Profiles/5xdcg2fi.default
	local N

	N=$1 perl -i -wpe '
		s/\(("network.proxy.type"), \d+\)/($1, $ENV{N})/;
	' prefs.js

	popd
}

set_tsocks() {
	local LOC=$1
	pushd "$MYDIR"

	local CONF=tsocks.conf.null
	if [ -f "tsocks.conf.$LOC" ] ; then
		CONF=tsocks.conf.$LOC
	fi

	local EXISTING="$( readlink tsocks.conf || : )"
	if [ "$EXISTING" != "$CONF" ] ; then
		rm -f tsocks.conf
		ln -s $CONF tsocks.conf
	fi

	popd
}

curl_proxy() {
	local PROXY=$1

	if [ "$PROXY" = off ] ; then
		# FIXME should just rewrite...
		rm -f ~/.curlrc
	else
		# FIXME should just rewrite...
		echo "proxy = $PROXY" > ~/.curlrc
	fi
}

LOC="${1:-$( ./get-location )}"

FF_PROXY_TYPE_MANUAL=1
FF_PROXY_TYPE_PAC=2
FF_PROXY_TYPE_AUTO=4

case "$LOC" in
	Home)
		svn_proxy off
		firefox_proxy_type $FF_PROXY_TYPE_AUTO
		curl_proxy off
		;;
	Reith)
		svn_proxy on
		firefox_proxy_type $FF_PROXY_TYPE_PAC
		curl_proxy http://www-cache.reith.bbc.co.uk:80
		;;
	Roaming)
		svn_proxy off
		firefox_proxy_type $FF_PROXY_TYPE_AUTO
		curl_proxy off
		;;
	*)
		echo "$0: unknown location $LOC" >&2
		exit 1
		;;
esac

# TODO
# export http_proxy=http://www-cache.reith.bbc.co.uk:80
# export https_proxy=http://www-cache.reith.bbc.co.uk:80
# export ftp_proxy=http://www-cache.reith.bbc.co.uk:80
# export any_proxy=http://www-cache.reith.bbc.co.uk:80

set_tsocks "$LOC"

if [ -f "bashrc.$LOC" ] ; then
	rm -f bashrc ; ln -s bashrc.$LOC bashrc
else
	rm -f bashrc ; ln -s bashrc.null bashrc
fi

# screen provides a tty for sudo, even though sudo doesn't need a password.
# -d -m means run screen without a tty.
screen -d -m sudo svc -k $HOME/svscan/socks-proxy

exit
